@* ReSharper disable once CheckNamespace *@
@namespace Comp
@inherits MRI.MVVM.Web.Helpers.BaseComponent<ViewModels.Interfaces.Queries.IBookSectionsViewModel>

<RadzenGrid Count="ViewModel.TotalItems" AllowPaging="true" LoadData="LoadTableData" Data="ViewModel.Items" PageSize="ViewModel.PageSize" TItem="Models.Interfaces.Entities.ISection">
  <Columns>
    <RadzenGridColumn TItem="Models.Interfaces.Entities.ISection" Property="Header" Title="Header">
      <FooterTemplate>
        Displayed sections: <b>@ViewModel.Items.Count</b> of <b>@ViewModel.TotalItems</b>
      </FooterTemplate>
    </RadzenGridColumn>
    <RadzenGridColumn TItem="Models.Interfaces.Entities.ISection" Title="Figure">
      <Template Context="data">
        @if (string.IsNullOrEmpty(data.FigureDescription)) {
          <span>None</span>
        }
        else {
          <span>@data.FigureNumber</span><span>. </span><span>@data.FigureDescription</span>
        }
      </Template>
    </RadzenGridColumn>
    <RadzenGridColumn TItem="Models.Interfaces.Entities.ISection" Title="Pages">
      <Template Context="data">
        @if (data.StartPage == data.EndPage) {
          <span>@data.StartPage</span>
        }
        else {
          <span>@data.StartPage</span><span> - </span><span>@data.EndPage</span>
        }
      </Template>
    </RadzenGridColumn>
  </Columns>
</RadzenGrid>

@code {

  private int m_bookId;

  /// <summary>
  /// Parent book id
  /// </summary>
  [Parameter]
  public int BookId
  {
    get => m_bookId;
    set
    {
      m_bookId = value;
      ViewModel.BookId = value;
    }
  }

  /// <inheritdoc />
  protected override async Task OnInitializedAsync()
    => await ViewModel.LoadItems().ConfigureAwait(true);

  private async void LoadTableData(LoadDataArgs obj)
  {
    ViewModel.Search = obj.Filter;

    ViewModel.PageIndex = obj.Skip!.Value / ViewModel.PageSize + 1;

    await ViewModel.LoadItems().ConfigureAwait(false);
  }
}