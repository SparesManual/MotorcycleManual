@page "/partsall"
@inherits BasePagedComponent<IAllPartsViewModel, IPart>
@inject NavigationManager m_navigationManager

<h1>PartsAll</h1>

<div>
  <RadzenAutoComplete Data="ViewModel!.Autocomplete" LoadData="LoadAutocompleteData" Placeholder="Search..."/>
</div>

<RadzenGrid @ref="m_grid"
            Count="ViewModel!.TotalItems"
            AllowPaging="true"
            LoadData="x => LoadData(x.Filter, x)"
            Data="ViewModel!.Items"
            PageSize="ViewModel!.PageSize"
            RowSelect="@SelectPart"
            TItem="IPart">
  <Columns>
    <RadzenGridColumn TItem="IPart" Property="PartNumber" Title="Part number">
      <FooterTemplate>
        Displayed parts: <b>@ViewModel!.Items.Count</b> of <b>@ViewModel!.TotalItems</b>
      </FooterTemplate>
    </RadzenGridColumn>
    <RadzenGridColumn TItem="IPart" Property="MakersPartNumber" Title="Makers number"/>
    <RadzenGridColumn TItem="IPart" Property="Description" Title="Description"/>
  </Columns>
</RadzenGrid>

@code {
#nullable enable

#pragma warning disable 649
  private RadzenGrid<IPart>? m_grid;
#pragma warning restore 649

  /// <inheritdoc />
  protected override void GoToPage(int page)
    => m_grid?.GoToPage(page);

  private async void LoadAutocompleteData(LoadDataArgs obj)
  {
    if (ViewModel != null) await ViewModel.UpdateAutocomplete(obj.Filter).ConfigureAwait(false);
  }

  private void SelectPart(IPart part)
    => m_navigationManager.NavigateTo("part/" + part.Id);

}