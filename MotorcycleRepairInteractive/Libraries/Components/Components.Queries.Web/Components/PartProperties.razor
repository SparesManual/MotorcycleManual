@namespace Test
@inherits MRI.MVVM.Web.Helpers.BaseComponent<ViewModels.Interfaces.Queries.IPartPropertiesViewModel>

<RadzenGrid Count="ViewModel.TotalItems" AllowPaging="true" LoadData="LoadTableData" Data="ViewModel.Items" PageSize="ViewModel.PageSize" TItem="Models.Interfaces.Entities.IProperty">
  <Columns>
    <RadzenGridColumn TItem="Models.Interfaces.Entities.IProperty" Property="PropertyName" Title="Name">
      <FooterTemplate>
        Displayed parts: <b>@ViewModel.Items.Count</b> of <b>@ViewModel.TotalItems</b>
      </FooterTemplate>
    </RadzenGridColumn>
    <RadzenGridColumn TItem="Models.Interfaces.Entities.IProperty" Title="Value">
      <Template Context="data">
        @data.PropertyValue
        @if (!string.IsNullOrEmpty(data.Unit))
        {
          @data.Unit
        }
      </Template>
    </RadzenGridColumn>
  </Columns>
</RadzenGrid>

@code {

  private int m_partId;

  [Parameter]
  public int PartId
  {
    get => m_partId;
    set
    {
      m_partId = value;
      ViewModel.PartId = value;
    }
  }

  /// <inheritdoc />
  protected override async Task OnInitializedAsync()
    => await ViewModel.LoadItems().ConfigureAwait(true);

  private async void LoadTableData(LoadDataArgs obj)
  {
    ViewModel.Search = obj.Filter;

    ViewModel.PageIndex = obj.Skip!.Value / ViewModel.PageSize + 1;

    await ViewModel.LoadItems().ConfigureAwait(false);
  }
}