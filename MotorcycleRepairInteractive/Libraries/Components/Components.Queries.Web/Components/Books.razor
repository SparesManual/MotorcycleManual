@page "/books"
@using Models.Interfaces.Entities
@inherits MRI.MVVM.Web.Helpers.BasePagedComponent<ViewModels.Interfaces.Queries.IBooksViewModel, Models.Interfaces.Entities.IBook>
@inject NavigationManager m_navigationManager

<h1>Books</h1>

<RadzenDataList @ref="m_list" WrapItems="true" LoadData="x => LoadData(x.Filter, x)" AllowPaging="true" Count="@ViewModel.TotalItems" PageSize="@ViewModel.PageSize" Data="@ViewModel.Items" TItem="Models.Interfaces.Entities.IBook">
  <Template Context="book">
    <RadzenCard Style="width:300px; padding-left: 25px; padding-top: 10px">
      <div class="row mb-auto">
        <div>
          <b>@book.Title</b>
        </div>
      </div>
      <div class="row mt-2">
        <RadzenButton Icon="assignment" Click="() => NavigateToBook(book.Id)">Open</RadzenButton>
      </div>
    </RadzenCard>
  </Template>
</RadzenDataList>

@code {

  private RadzenDataList<IBook> m_list;

  private void NavigateToBook(int id)
    => m_navigationManager.NavigateTo("book/" + id);

  /// <inheritdoc />
  protected override void GoToPage(int page)
    => m_list?.GoToPage(page);

}