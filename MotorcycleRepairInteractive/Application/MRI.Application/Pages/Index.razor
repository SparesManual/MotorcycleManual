@page "/"
@using MRI.Db
@inherits MRI.MVVM.Web.Helpers.BaseComponent<ViewModels.Queries.BooksViewModel>

<style>
  .demo-mat-card {
    max-width: 400px;
  }

  .demo-mat-card-content {
    padding: 1rem;
  }

  .demo-mat-card-clean-margin {
    margin: 0px;
  }
</style>

<h1>Hello, world!</h1>

<div>
  @*<MatStringField OnInput="Callback" Label="Standard"></MatStringField>*@
  
  @*<MatAutocompleteList Icon="@MatIconNames.Search" Items="ViewModel.AutocompleteBooks" TItem="string" OnTextChanged="@ViewModel.ReloadAutocomplete"></MatAutocompleteList>*@
</div>

<div>
  <MatPaginator Length="@ViewModel.TotalItems" PageSize="@ViewModel.PageItems" Page="@ViewModel.LoadBooks" />
</div>

<div class="mat-layout-grid">
  <div class="mat-layout-grid-inner">
    @foreach (var book in ViewModel.Books)
    {
      <MatCard class="demo-mat-card mat-layout-grid-cell">
        <MatCardContent>
          <MatCardMedia Wide="true" ImageUrl="https://material-components.github.io/material-components-web-catalog/static/media/photos/3x2/2.jpg"></MatCardMedia>
          <div class="demo-mat-card-content">
            <MatHeadline6 class="demo-mat-card-clean-margin">
              @book.Title
            </MatHeadline6>
          </div>
        </MatCardContent>
        <MatCardActions>
          <MatButton>Open</MatButton>
        </MatCardActions>
      </MatCard>
    }
  </div>
</div>

@code
{
  /// <inheritdoc />
  protected override async Task OnInitializedAsync()
    => await ViewModel.LoadBooks().ConfigureAwait(false);

  /// <inheritdoc />
  protected override void OnInitialized()
  {
    base.OnInitialized();

    ViewModel.AutocompleteBooks.CollectionChanged += (sender, args) => StateHasChanged();
  }
}
