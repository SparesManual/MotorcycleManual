@page "/verifyEmail/{userId}/{token}"
@using Db.Interfaces
@inject NavigationManager m_navigationManager
@inject IAPIAuth m_auth

@code {

  /// <summary>
  /// User id
  /// </summary>
  [Parameter]
  public string UserId { get; set; } = string.Empty;

  /// <summary>
  /// Email verification token
  /// </summary>
  [Parameter]
  public string Token { get; set; } = string.Empty;

  /// <inheritdoc />
  protected override async Task OnParametersSetAsync()
  {
    await base.OnParametersSetAsync().ConfigureAwait(false);

    var result = await m_auth.VerifyEmailAsync(UserId, Token).ConfigureAwait(false);
    // If the verification was a success
    if (result)
    {
      await Task.Delay(5000).ConfigureAwait(false);
      m_navigationManager.NavigateTo("/login");
    }
    // Otherwise..
    else
    {
      m_navigationManager.NavigateTo("/");
    }
  }

}

@if (!string.IsNullOrEmpty(UserId?.Trim()) || !string.IsNullOrEmpty(Token?.Trim()))
{
  <h2>Thank you for verifying your email</h2>
}
else
{
  m_navigationManager.NavigateTo("/");
}