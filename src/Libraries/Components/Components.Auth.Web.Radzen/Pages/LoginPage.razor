@page "/login"
@inherits BaseComponent<ILoginViewModel>
@implements ILoginView

@inject ILoginViewModelValidator m_validator

@if (m_invalidCredentials)
{
  <span>Invalid email or password</span>
}

<EditForm Model="@ViewModel"
          OnValidSubmit="ViewModel!.SubmitCommand.Execute">
  <FluentValidator Validator="m_validator"/>
  <div class="container w-25 align-middle">
    <div class="row mb-2">
      <div class="col">
        <div class="row">
          <RadzenTextBox id="Email" Placeholder="Email" Name="Email" @bind-Value="@ViewModel!.Email" Style="width: 100%" />
        </div>
        <div class="row">
          <ValidationMessage For="() => ViewModel!.Email" class="mt-2"/>
        </div>
      </div>
    </div>
    
    <div class="row mb-4">
      <div class="col">
        <div class="row">
          <RadzenPassword id="Password" Placeholder="Password..." Name="Password" @bind-Value="@ViewModel!.Password" class="w-100"/>
        </div>
        <div class="row">
          <ValidationMessage For="() => ViewModel!.Password" class="mt-2"/>
        </div>
      </div>
    </div>
    
    <div class="row mb-4">
      <div class="col align-content-start">
        <RadzenCheckBox id="RememberMe" Value="ViewModel!.RememberMe" TValue="bool" Name="CheckBox1"/>
        <RadzenLabel Text="Remember me" Component="CheckBox1" class="ml-2"/>
      </div>
      <div class="col-sm align-content-end">
        <a href="/forgotPassword" id="ForgotPassword">Forgot password</a>
      </div>
    </div>

    <RadzenButton class="row"
                  id="Login"
                  ButtonType="ButtonType.Submit"
                  Text="Login"/>
    
    <a href="/register">Not a member? Register</a>
  </div>
</EditForm>

@code {

  private bool m_invalidCredentials;

  /// <inheritdoc />
  protected override void OnInitialized()
  {
    base.OnInitialized();
    m_invalidCredentials = false;
  }

}